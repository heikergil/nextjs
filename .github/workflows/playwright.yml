name: E2E Tests
on:   
    release:
        types: [published]
    workflow_dispatch:

jobs:
   E2E-Tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: Cache node_modules
      uses: actions/cache@v3
      id: cache-node-modules
      with:
          path: |
              node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

    - name: Cache Playwright
      uses: actions/cache@v3
      with:
          path: |
              ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('yarn.lock') }}

    - name: Install pakages
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: yarn

    - name: Install Playwright 
      run: npx playwright install --with-deps chromium

    - name: Run Playwright tests
      continue-on-error: true
      env: 
        BASE_URL: ${{ github.event.deployment_status.target_url }}
      run: yarn playwright test
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 3


    - name: Setup Pages
      uses: actions/configure-pages@v2
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        # Upload entire repository
        github_token: ${{ secrets.GITHUB_TOKEN }}
        path: playwright-report/
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1

    # - name: Publish HTML report to testresults.marcusfelling.com
    #   if: always() # We want this to always run, even if test fail prior to this step running
    #   uses: peaceiris/actions-gh-pages@v3.7.3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: playwright-report/ # This is where index.html will be output
    #     keep_files: true # Set this to true to make sure we don't wipe out the other content in GitHub Pages
    #     user_name: 'github-actions[bot]' # This will be the username that gets stamped in the repo commit
    #     user_email: 'github-actions[bot]@users.noreply.github.com' # This will be the user email that gets  
 
    

name: Deploy
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  
on: [push, workflow_dispatch]
    

      
jobs:
    build:
        timeout-minutes: 30 # nothing good happens after 30 minutes
        name: Vercel Prod Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js 
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'
                  cache-dependency-path: yarn.lock

            - name: Get node version
              id: node
              run: |
               echo "version=$(node -v)" >> $GITHUB_OUTPUT

            - name: Get node_modules cache
              uses: actions/cache@v3
              id: node_modules
              with:
                path: |
                    **/node_modules
                key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}

            - name: Install pakages
              run: yarn install --frozen-lockfile --prefer-offline


            - name: Build app
              run: yarn next build

            - name: Install Vercel CLI
              run: npm install --global vercel@latest

            - name: Pull Preview Enviroment
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Preview
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}               

            - name: Deploy Preview
              id: deploy-vercel-staging
              run: echo "preview_url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

            - name: Cache Playwright
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/ms-playwright
                  key: playwright-${{ hashFiles('yarn.lock') }}

            - name: Install Playwright Browsers
              if: steps.cache-playwright.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps chromium webkit      

            - name: run e2e test
              env:
               BASE_URL: ${{ steps.deploy-vercel-staging.outputs.preview_url }}
               PROD: true
              run: npx playwright test e2e/tests  --workers=1

            - name: Pull Prod Enviroment
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Prod
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Prod
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}           